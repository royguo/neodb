CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(neodb LANGUAGES C CXX)

IF(POLICY CMP0042)
  CMAKE_POLICY(SET CMP0042 NEW)
ENDIF()
SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
SET(CMAKE_CXX_STANDARD 17)

# options
OPTION(WITH_ASAN "build with ASAN" OFF)

IF(WITH_ASAN)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address")
ENDIF()

# options log

# third-parties
# ADD_SUBDIRECTORY(third)

# header files
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)

# source files
FILE(GLOB SOURCE_FILES src/*.cc)
FILE(GLOB TEST_FILES src/*_test.cc)
LIST(REMOVE_ITEM SOURCE_FILES ${TEST_FILES})

# build neodb library
ADD_LIBRARY(neodb STATIC ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(neodb zbd)

# build neodb test cases
ENABLE_TESTING()
FIND_PACKAGE(GTest REQUIRED)
IF(NOT GTEST_FOUND)
  MESSAGE(FATAL_ERROR "[neodb] gtest library cannot be found!")
ENDIF()
INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})
FOREACH(test_file ${TEST_FILES})
    GET_FILENAME_COMPONENT(exename ${test_file} NAME_WE)
    ADD_EXECUTABLE(${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX} ${test_file})
    SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX}
        PROPERTIES EXCLUDE_FROM_DEFAULT_BUILD_RELEASE 1
        EXCLUDE_FROM_DEFAULT_BUILD_MINRELEASE 1
        EXCLUDE_FROM_DEFAULT_BUILD_RELWITHDEBINFO 1
        OUTPUT_NAME ${exename}${ARTIFACT_SUFFIX}
    )
    TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX} ${GTEST_BOTH_LIBRARIES} pthread neodb)
ENDFOREACH()

# build neodb tools
# ADD_EXECUTABLE()
